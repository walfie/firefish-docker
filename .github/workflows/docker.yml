# https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
name: Docker
on:
  workflow_dispatch:
    inputs:
      remote:
        description: Remote repository
        required: true
        default: "git@gitlab.com:walfie/firefish.git"
      branch:
        description: Branch to release
        required: true
        default: walfie

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PRERELEASE_PREFIX: walfie

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
        - linux/amd64
        - linux/arm64
    defaults:
      run:
        working-directory: build
    outputs:
      tag: ${{ steps.get_version.outputs.VERSION }}
    steps:
    - name: Checkout
      run: |
        rm .gitkeep
        git clone --depth=1 ${{ inputs.remote }} .
        git checkout ${{ inputs.branch }}
    - name: Get version
      id: get_version
      run: |
        COMMIT_HASH="$(git rev-parse --short HEAD)"
        BASE_VERSION="$(jq .version <package.json)"
        echo "VERSION=v$BASE_VERSION-$PRERELEASE_PREFIX+$COMMIT_HASH" >>$GITHUB_OUTPUT
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ env.VERSION }}
          type=raw,value=latest
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Log in to container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: ${{ matrix.platform }}
        labels: ${{ steps.meta.outputs.labels }}
        outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
    - name: Export digest
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"
    - name: Upload digest
      uses: actions/upload-artifact@v3
      with:
        name: digests
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
    - build
    steps:
    - name: Download digests
      uses: actions/download-artifact@v3
      with:
        name: digests
        path: /tmp/digests
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ needs.build.outputs.version }}
          type=raw,value=latest
    - name: Log in to container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Create manifest list and push
      working-directory: /tmp/digests
      run: |
        docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)
    - name: Inspect image
      run: |
        docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
